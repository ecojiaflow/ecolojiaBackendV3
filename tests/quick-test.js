/**
 * TEST RAPIDE DIAGNOSTIC SPRINT 2
 * V√©rifie les imports et classes de base
 */

console.log('üîç === DIAGNOSTIC SPRINT 2 ===');

// Test 1: V√©rification fichiers Sprint 1
console.log('\nüìÇ Test 1: V√©rification fichiers existants...');

try {
  const fs = require('fs');
  const path = require('path');
  
  const requiredFiles = [
    'src/scorers/food/novaClassifier.js',
    'src/scorers/food/additivesAnalyzer.js',
    'src/scorers/common/confidenceCalculator.js',
    'src/data/nova-rules.json',
    'src/data/additives-efsa.json'
  ];
  
  requiredFiles.forEach(file => {
    const exists = fs.existsSync(file);
    console.log(`   ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
  });
  
} catch (error) {
  console.log('   ‚ùå Erreur v√©rification fichiers:', error.message);
}

// Test 2: V√©rification nouveaux fichiers Sprint 2
console.log('\nüìÇ Test 2: V√©rification nouveaux fichiers Sprint 2...');

try {
  const fs = require('fs');
  
  const newFiles = [
    'src/data/nutri-score-tables.json',
    'src/data/glycemic-index-db.json',
    'src/scorers/food/nutriScorer.js',
    'src/scorers/food/glycemicEstimator.js'
  ];
  
  newFiles.forEach(file => {
    const exists = fs.existsSync(file);
    console.log(`   ${exists ? '‚úÖ' : '‚ùå'} ${file}`);
  });
  
} catch (error) {
  console.log('   ‚ùå Erreur v√©rification nouveaux fichiers:', error.message);
}

// Test 3: Test imports individuels
console.log('\nüîó Test 3: Test imports individuels...');

// Test NovaClassifier
try {
  const NovaClassifier = require('./src/scorers/food/novaClassifier');
  console.log(`   ‚úÖ NovaClassifier: ${typeof NovaClassifier === 'function' ? 'Constructor OK' : 'Type: ' + typeof NovaClassifier}`);
} catch (error) {
  console.log(`   ‚ùå NovaClassifier: ${error.message}`);
}

// Test AdditivesAnalyzer
try {
  const AdditivesAnalyzer = require('./src/scorers/food/additivesAnalyzer');
  console.log(`   ‚úÖ AdditivesAnalyzer: ${typeof AdditivesAnalyzer === 'function' ? 'Constructor OK' : 'Type: ' + typeof AdditivesAnalyzer}`);
} catch (error) {
  console.log(`   ‚ùå AdditivesAnalyzer: ${error.message}`);
}

// Test NutriScorer (nouveau)
try {
  const NutriScorer = require('./src/scorers/food/nutriScorer');
  console.log(`   ‚úÖ NutriScorer: ${typeof NutriScorer === 'function' ? 'Constructor OK' : 'Type: ' + typeof NutriScorer}`);
} catch (error) {
  console.log(`   ‚ùå NutriScorer: ${error.message}`);
}

// Test GlycemicEstimator (nouveau)
try {
  const GlycemicEstimator = require('./src/scorers/food/glycemicEstimator');
  console.log(`   ‚úÖ GlycemicEstimator: ${typeof GlycemicEstimator === 'function' ? 'Constructor OK' : 'Type: ' + typeof GlycemicEstimator}`);
} catch (error) {
  console.log(`   ‚ùå GlycemicEstimator: ${error.message}`);
}

// Test 4: Test donn√©es JSON
console.log('\nüìä Test 4: Test chargement donn√©es JSON...');

try {
  const nutriTables = require('./src/data/nutri-score-tables.json');
  console.log(`   ‚úÖ nutri-score-tables.json: ${Object.keys(nutriTables).length} sections`);
} catch (error) {
  console.log(`   ‚ùå nutri-score-tables.json: ${error.message}`);
}

try {
  const glycemicDB = require('./src/data/glycemic-index-db.json');
  console.log(`   ‚úÖ glycemic-index-db.json: ${Object.keys(glycemicDB.categories || {}).length} cat√©gories`);
} catch (error) {
  console.log(`   ‚ùå glycemic-index-db.json: ${error.message}`);
}

// Test 5: Test instanciation simple
console.log('\nüèóÔ∏è Test 5: Test instanciation simple...');

try {
  const NutriScorer = require('./src/scorers/food/nutriScorer');
  const nutriScorer = new NutriScorer();
  console.log('   ‚úÖ NutriScorer instanci√© avec succ√®s');
} catch (error) {
  console.log(`   ‚ùå Erreur instanciation NutriScorer: ${error.message}`);
}

try {
  const GlycemicEstimator = require('./src/scorers/food/glycemicEstimator');
  const glycemicEstimator = new GlycemicEstimator();
  console.log('   ‚úÖ GlycemicEstimator instanci√© avec succ√®s');
} catch (error) {
  console.log(`   ‚ùå Erreur instanciation GlycemicEstimator: ${error.message}`);
}

console.log('\nüéØ === FIN DIAGNOSTIC ===');
console.log('üìù Partage ces r√©sultats pour diagnostic pr√©cis du probl√®me !');